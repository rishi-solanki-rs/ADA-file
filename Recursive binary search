#include <iostream>

// Recursive function for binary search
int binarySearchRecursive(int arr[], int left, int right, int target) {
    if (left <= right) {
        int mid = left + (right - left) / 2;

        // If the element is present at the middle
        if (arr[mid] == target)
            return mid;

        // If the element is smaller than mid, then it can only be present in the left subarray
        if (arr[mid] > target)
            return binarySearchRecursive(arr, left, mid - 1, target);

        // Else the element can only be present in the right subarray
        return binarySearchRecursive(arr, mid + 1, right, target);
    }

    // Element is not present in the array
    return -1;
}

int main() {
    int arr[] = {2, 5, 8, 12, 16, 23, 38, 56, 72, 91};
    int size = sizeof(arr) / sizeof(arr[0]); // Calculate size of array

    int target = 23;

    int result = binarySearchRecursive(arr, 0, size - 1, target);
    if (result != -1)
        std::cout << "Element found at index: " << result << std::endl;
    else
        std::cout << "Element not found in array" << std::endl;

    return 0;
}
